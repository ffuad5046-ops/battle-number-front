import {useEffect, useState} from "react"
import {useNavigate} from "react-router-dom"
import styles from './home.module.scss'
import Modal from "../../components/modal/modal";
import {useDispatch, useSelector} from "react-redux";
import {logout} from "../../redux/slice/userSlice";
import {selectStatusLogout, selectUser} from "../../redux/selector/userSelector";
import {Tooltip} from "../../components/tooltip/tooltip";
import useRedirect from "../../hooks/useRedirect";
import {socket} from "../../socket/socket";
import {updateGame} from "../../redux/slice/gameSlice";
import {setNotification} from "../../redux/slice/invitationSlice";
import {logoutUser} from "../../redux/request/userApi";

const Home = () => {
    useRedirect()

    const dispatch = useDispatch<any>();
    const navigate = useNavigate()

    const user = useSelector(selectUser);

    const [modalOpen, setModalOpen] = useState(false)

    const exit = () => {
        dispatch(logoutUser())
    }

    const playWithFriend = () => {
        navigate('/play-with-friend')
    }

    useEffect(() => {
        if (user?.isGuest && localStorage.getItem('isGuestInfo') !== 'ok') {
            setModalOpen(true)
        }
    }, [user])

    return <>
        <div className={styles.home}>
            <div className={styles.header}>
                <button className={styles.avatarButton} onClick={() => navigate('/setting')}>
                    {user?.name[0].toUpperCase() || 'U'}
                </button>
            </div>

            <div className={styles.container}>
                <h1 className={styles.title}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.name} üëã</h1>
                <p className={styles.subtitle}>–ì–æ—Ç–æ–≤ —Å—ã–≥—Ä–∞—Ç—å?</p>

                <div className={styles.buttons}>
                    <button className={`${styles.button} ${styles.play}`} onClick={playWithFriend}>
                        üéÆ –ò–≥—Ä–∞—Ç—å —Å –¥—Ä—É–≥–æ–º
                    </button>

                    <Tooltip
                        message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ"
                        disabled={!user.isGuest}
                    >
                        <button className={`${styles.button} ${styles.play}`} disabled={user.isGuest}>
                            üåê –ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä
                        </button>
                    </Tooltip>

                    <Tooltip
                        message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
                        disabled={!user.isGuest}
                    >
                        <button className={`${styles.button} ${styles.play}`} onClick={() => navigate('/stats')}
                                disabled={user.isGuest}
                        >
                            üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                        </button>
                    </Tooltip>

                    <button className={`${styles.button} ${styles.exit}`} onClick={exit}>
                        üö™ –í—ã–π—Ç–∏
                    </button>
                </div>
            </div>
        </div>

        <Modal
            isOpen={modalOpen}
            title="–í—ã –≥–æ—Å—Ç—å"
            onClose={() => {
                setModalOpen(false);
                localStorage.setItem('isGuestInfo', 'ok')
            }}
        >
            <p>–£ –≤–∞—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.</p>
        </Modal>
    </>

}

export default Home