import React, {useEffect, useState} from "react";
import styles from './playWithFriend.module.scss'
import Alert from "../../components/alert/alert";
import {useDispatch, useSelector} from "react-redux";
import {sendInvitation} from "../../redux/request/invitationApi";
import {selectUser} from "../../redux/selector/userSelector";
import {Tooltip} from "../../components/tooltip/tooltip";
import useCheckStatusForAlert from "../../hooks/useCheckStatusForAlert";
import {selectInvitationSendError, selectInvitationSendStatus} from "../../redux/selector/invitationSelector";
import useRedirect from "../../hooks/useRedirect";
import {clearNotification} from "../../redux/slice/invitationSlice";
import BackButton from "../../components/backButton/backButton";

const PlayWithFriend = () => {
    useRedirect()

    const dispatch = useDispatch<any>();

    const user = useSelector(selectUser);

    const [toLogin, setToLogin ] = useState<any>()
    const [mainFieldWidth, setMainFieldWidth, ] = useState(45)
    const [mainFieldHeight, setMainFieldHeight ] = useState(35)
    const [extraFieldWidth, setExtraFieldWidth ] = useState(20)
    const [extraFieldHeight, setExtraFieldHeight ] = useState(20)
    const [numberRange, setNumberRange ] = useState(100)
    const [isShowLoseLeft, setIsShowLoseLeft ] = useState(true)

    const [isAdditionSetting, setIsAdditionSetting] = useState(false)

    const {alertType, alertVisible, alertMessage, closeModal} = useCheckStatusForAlert(
        selectInvitationSendStatus,
        selectInvitationSendError
    )

    const handleCreateInvitation = () => {
        dispatch(sendInvitation({
            fromUserId: user?.id,
            toLogin: toLogin?.trim(),
            mainFieldWidth,
            mainFieldHeight,
            extraFieldWidth,
            extraFieldHeight,
            numberRange,
            isShowLoseLeft
        }))
    }

    useEffect(() => {
        return () => {
            dispatch(clearNotification())
        }
    }, []);

    return <>
        <div className={styles.settings}>
            <div className={styles.card}>
                <BackButton />

                <h1 className={styles.title}>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã</h1>
                <p className={styles.subtitle}>–ò–∑–º–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –º–∞—Ç—á–∞</p>

                <div className={styles.form}>
                    <label className={styles.field}>
                        <span>–õ–æ–≥–∏–Ω –∏–≥—Ä–æ–∫–∞</span>
                        <input
                            type="text"
                            value={toLogin}
                            placeholder={'–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏–≥—Ä–æ–∫–∞'}
                            onChange={(e: any) => setToLogin(e.target.value)}
                        />
                    </label>

                    {!isAdditionSetting && <p className={styles.toggleButton} onClick={() => setIsAdditionSetting(true)}>‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã</p>}

                    {isAdditionSetting && (
                        <>
                            <h2 className={styles.sectionTitle}>–û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ</h2>

                            <div className={styles.grid}>
                                <label className={styles.field}>
                                    <span>–®–∏—Ä–∏–Ω–∞</span>
                                    <Tooltip
                                        message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ"
                                        disabled={!user.isGuest}
                                    >
                                        <input
                                            type="number"
                                            value={mainFieldWidth}
                                            onChange={(e) => setMainFieldWidth(Number(e.target.value))}
                                            disabled={user.isGuest}
                                        />
                                    </Tooltip>
                                </label>
                                <label className={styles.field}>
                                    <span>–í—ã—Å–æ—Ç–∞</span>
                                    <Tooltip
                                        message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ"
                                        disabled={!user.isGuest}
                                    >
                                        <input
                                            type="number"
                                            value={mainFieldHeight}
                                            onChange={(e) => setMainFieldHeight(Number(e.target.value))}
                                            disabled={user.isGuest}
                                        />
                                    </Tooltip>
                                </label>
                            </div>

                            <h2 className={styles.sectionTitle}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ</h2>

                            <div className={styles.grid}>
                                <label className={styles.field}>
                                    <span>–®–∏—Ä–∏–Ω–∞</span>
                                    <Tooltip
                                        message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ"
                                        disabled={!user.isGuest}
                                    >
                                        <input
                                            type="number"
                                            value={extraFieldWidth}
                                            onChange={(e) => setExtraFieldWidth(Number(e.target.value))}
                                            disabled={user.isGuest}
                                        />
                                    </Tooltip>
                                </label>
                                <label className={styles.field}>
                                    <span>–í—ã—Å–æ—Ç–∞</span>
                                    <Tooltip
                                        message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ"
                                        disabled={!user.isGuest}
                                    >
                                        <input
                                            type="number"
                                            value={extraFieldHeight}
                                            onChange={(e) => setExtraFieldHeight(Number(e.target.value))}
                                            disabled={user.isGuest}
                                        />
                                    </Tooltip>
                                </label>
                            </div>

                            <label className={styles.field}>
                                <span>–î–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª</span>
                                <Tooltip
                                    message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ"
                                    disabled={!user.isGuest}
                                >
                                    <input
                                        type="number"
                                        value={numberRange}
                                        onChange={(e) => setNumberRange(Number(e.target.value))}
                                        disabled={user.isGuest}
                                    />
                                </Tooltip>
                            </label>

                            <label>
                                <Tooltip
                                    message="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ"
                                    disabled={!user.isGuest}
                                >
                                    <input
                                        type="checkbox"
                                        onChange={(e: any) => setIsShowLoseLeft(e.target.checked)}
                                        checked={isShowLoseLeft}
                                        disabled={user.isGuest}
                                    />
                                    <span>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —è—á–µ–µ–∫</span>
                                </Tooltip>
                            </label>

                            <p className={styles.toggleButton} onClick={() => setIsAdditionSetting(false)}>‚¨ÜÔ∏è –°–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã</p>
                        </>
                    )}

                    <button className={styles.button} onClick={handleCreateInvitation}>
                        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                    </button>
                </div>
            </div>
        </div>

        <Alert
            type={alertType}
            message={alertMessage}
            visible={alertVisible}
            onClose={closeModal}
            autoHide={3000}
        />
    </>
}

export default PlayWithFriend